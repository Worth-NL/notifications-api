"""
Create Date: 2024-05-30 17:39:21.483942
"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

revision = "0451_unsubscribe_requests"
down_revision =  "0450_drop_unused_indexes_2"


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "unsubscribe_request_report",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("service_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("earliest_timestamp", sa.DateTime(), nullable=False),
        sa.Column("latest_timestamp", sa.DateTime(), nullable=False),
        sa.Column("processed_by_service_at", sa.DateTime(), nullable=True),
        sa.Column("count", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["service_id"],
            ["services.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_table(
        "unsubscribe_request",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("notification_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("service_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("template_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("template_version", sa.Integer(), nullable=False),
        sa.Column("email_address", sa.Text(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("unsubscribe_request_report_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["service_id"],
            ["services.id"],
        ),
        sa.ForeignKeyConstraint(
            ["template_id", "template_version"],
            ["templates_history.id", "templates_history.version"],
        ),
        sa.ForeignKeyConstraint(
            ["unsubscribe_request_report_id"],
            ["unsubscribe_request_report.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_index(
        op.f("ix_unsubscribe_request_notification_id"), "unsubscribe_request", ["notification_id"], unique=False
    )
    op.create_index(
        "ix_unsubscribe_request_unsubscribe_request_report_id",
        "unsubscribe_request",
        ["unsubscribe_request_report_id"],
        unique=False,
    )
    op.create_table(
        "unsubscribe_request_history",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("notification_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("service_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("template_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("template_version", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("unsubscribe_request_report_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["service_id"],
            ["services.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_unsubscribe_request_history_notification_id"),
        "unsubscribe_request_history",
        ["notification_id"],
        unique=False,
    )
    op.add_column("templates", sa.Column("has_unsubscribe_link", sa.Boolean(), nullable=True))
    op.add_column("templates_history", sa.Column("has_unsubscribe_link", sa.Boolean(), nullable=True))


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("templates_history", "has_unsubscribe_link")
    op.drop_column("templates", "has_unsubscribe_link")
    op.drop_table("unsubscribe_request_history")
    op.drop_table("unsubscribe_request")
    op.drop_table("unsubscribe_request_report")
    # ### end Alembic commands ###
